on: [push, pull_request]

jobs:
  build_and_release:
    runs-on: ubuntu-18.04
    name: Build and upload
    steps:
      - uses: actions/checkout@v2.1.0
        name: Checkout

      - name: Setup
        run: |
          mkdir -p artifacts

      - name: Build on x86_64 (Ubuntu 18.04)
        run: |
          uname -a
          sudo apt-get update && sudo apt-get install -y gcc make
          make install EXEC_PREFIX=out OUTNAME="netreactd-x86_64-fhs" BUILD_DIR=_build-x86_64
          gzip -c out/bin/netreactd-x86_64-fhs > artifacts/netreactd-x86_64-fhs.gz

      - name: Build on aarch64 (Ubuntu 18.04)
        if: success()
        uses: uraimo/run-on-arch-action@v2.0.8
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            apt-get update && apt-get install -y gcc make && rm -rf /var/lib/apt/lists/*
            make install EXEC_PREFIX=out OUTNAME="netreactd-aarch64-fhs" BUILD_DIR=_build-aarch64
            gzip -c out/bin/netreactd-aarch64-fhs > /artifacts/netreactd-aarch64-fhs.gz

      - name: Create Release
        if: success() && startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload x86_64 Release Asset
        if: success() && startsWith(github.ref, 'refs/tags/v')
        id: upload-release-asset-x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/netreactd-x86_64-fhs.gz
          asset_name: x86_64-fhs.gz
          asset_content_type: application/gzip

      - name: Upload aarch64 Release Asset
        if: success() && startsWith(github.ref, 'refs/tags/v')
        id: upload-release-asset-aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/netreactd-aarch64-fhs.gz
          asset_name: aarch64-fhs.gz
          asset_content_type: application/gzip
